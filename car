class Car;

  def_init_(self,rego,ownerName);
    self.rego = rego
    self.ownerName = ownerName
  
  def getOwner(self):
    return self.ownerName
    
  def getRego(self):
  return self.rego

class ParkingLot:

 def_init_(self,sid,isStaff):
   self.sid=sid
   self.isOccupied=False
   self.isStaff=isStaff
   
 def getParkingID(self):
   return self.sid
   
 def getisStaff(self):
   return self.isStaff
   
 def getVehicle(self):
   return self.carinparking
   
 def setStaff(self,isStaff):
   self.isStaff=distaff
   
 def removeVehicle(self):
   self.isOccupied=False
   return self.carinparking
   
 def parkStaffCar(self,carinparking):
   self.carinparking=carinparking
   self.isOccupied=True
   self.isStaff=True
   
 def parkVisitorCar(self,carinparking(:
   sf.carinparking=carinparking
   self.isOccupied=True
   self.isStaff= False

class CarPark;
   def_init_(self);self.parkingslots = [] 
   def addnewParkingSlots(self,parkingslots):
:
   self.parkingslots.append(parkingslot)
   def getAvailableParking(self):
       spots = [] 
       for i in self.parkingslots:if.i getisOccupied() ==False:
 
   spots.append(i.getParkingID()) return sports 
   def getAllParking(self):
      sports = [] 
      for i in self.parkingslots:
   spots.append(i.getParkingID()) return spots
   
   def removeParking(self, sid):
   for i in self.parkingslots:
   if i.getParkingID() == sid:
   return True
   return False
   
   def findParkingbyID(self,sid(:
   parkingfound = ParkingLot(-1,False)
   for i.getParkingID() == sid:
   parkingfound = i return parkingfound 


